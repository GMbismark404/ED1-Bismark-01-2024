//---------------------------------------------------------------------------
#pragma hdrstop
#include "uCSMemoria.h"
#include <string>
//---------------------------------------------------------------------------
#pragma package(smart_init)

TCSMemoria()::TCSMemoria()
{
	mem = new NodoM[MAX];
	for (int i = 0; i < MAX; i++) {
		mem[i].link = i + 1;
	}
	mem[MAX - 1].link = NULO;
	libre = 0;
}

int TCSMemoria::new_espacio(string cad) { // añade los ids y devuelve una direccion
	int cant = numero_ids(cad);         // cad = "ci,fono,edad" -> 3
	int dir = libre;
	int d = libre;
	for (int i = 0; i < cant - 1; i++) {
		mem[d].id = obtener_id(cad,i);
		d = mem[d].link;
	}

	libre = mem[d].link;
	mem[d].link = -1;
	mem[d].id = obtener_id(cad, cant - 1);
return dir;
}

int TCSMemoria::numero_ids(string id) { // "dia,mes,año"
int c = 0;
	if (id == "")
		return c;

	for (int i = 0; i < id.length() - 1; i++) {
		if ((id[i] != ',') && (id[i+1] == ',')) {
			c++;
		}
	}

	if (id[id.length() - 1] != ',') {
		c++;
	}
return c;
}